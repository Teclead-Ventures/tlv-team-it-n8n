{
  "nodes": [
    {
      "parameters": {
        "teamId": {
          "__rl": true,
          "value": "19231660-890a-4d8c-aa37-eec9155a7382",
          "mode": "list",
          "cachedResultName": "tlv-n8n-team"
        },
        "channelId": {
          "__rl": true,
          "value": "19:QkBEBfBTzgie0IpxWzP6TlQu71o5V7xNOshVTwxLjss1@thread.tacv2",
          "mode": "list",
          "cachedResultName": "ai-confirmations"
        }
      },
      "type": "n8n-nodes-base.microsoftTeamsTrigger",
      "typeVersion": 1,
      "position": [-1600, 1040],
      "id": "915becbd-cee9-4829-b9c1-302d08f6431c",
      "name": "On Teams message",
      "webhookId": "130530eb-9a73-4ac1-ab88-5450da59feb2",
      "credentials": {
        "microsoftTeamsOAuth2Api": {
          "id": "JfBX4Cn1M8SQBnFV",
          "name": "Microsoft Teams account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cond-is-reply-odata",
              "leftValue": "={{ $json['@odata.id'] || '' }}",
              "rightValue": "replies(",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [-1424, 1040],
      "id": "c7da655b-1704-4411-b128-d2065d2c85b7",
      "name": "Is CHANGE reply?"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Extract context from @odata.id since trigger lacks message body\nconst odataId = $json['@odata.id'] || '';\nconst m = odataId.match(/teams\\('([^']+)'\\)\\/channels\\('([^']+)'\\)\\/messages\\('([^']+)'\\)\\/replies\\('([^']+)'\\)/);\nlet teamId = null, channelId = null, parentMessageId = null, replyId = null;\nif (m) {\n  teamId = m[1];\n  channelId = m[2];\n  parentMessageId = m[3];\n  replyId = m[4];\n}\nreturn { teamId, channelId, parentMessageId, replyId, odataId };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-1216, 1024],
      "id": "48b4ca0b-df82-4d66-924d-b1845480ebce",
      "name": "Extract reply context"
    },
    {
      "parameters": {
        "url": "={{ 'https://graph.microsoft.com/v1.0/teams/' + $('Extract reply context').item.json.teamId + '/channels/' + $('Extract reply context').item.json.channelId + '/messages/' + $('Extract reply context').item.json.parentMessageId }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "microsoftTeamsOAuth2Api",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [-848, 1184],
      "id": "a35f8b36-ed57-4933-94af-07862e1f8755",
      "name": "Get parent message",
      "credentials": {
        "microsoftTeamsOAuth2Api": {
          "id": "JfBX4Cn1M8SQBnFV",
          "name": "Microsoft Teams account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ 'https://graph.microsoft.com/v1.0/teams/' + $('Extract reply context').item.json.teamId + '/channels/' + $('Extract reply context').item.json.channelId + '/messages/' + $('Extract reply context').item.json.parentMessageId + '/replies/' + $('Extract reply context').item.json.replyId }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "microsoftTeamsOAuth2Api",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [-1008, 976],
      "id": "69a0fbef-2d15-4ce8-9621-8ac6cb365103",
      "name": "Get reply message",
      "credentials": {
        "microsoftTeamsOAuth2Api": {
          "id": "JfBX4Cn1M8SQBnFV",
          "name": "Microsoft Teams account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "has-change",
              "leftValue": "={{ $json.body.content }}",
              "rightValue": "CHANGE:",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [-848, 976],
      "id": "c7b50307-a581-48db-be27-8ad2dd531bd7",
      "name": "Has CHANGE prefix?"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [-400, 1040],
      "id": "eac39fa6-9a94-4d33-b0ab-77a71952f7af",
      "name": "Merge reply + parent"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Extract useful fields from merged item (reply context + parent message)\nconst replyText = $json.replyText || '';\nconst parentHtml = $json.body?.content || $json.parentHtml || '';\n\nfunction stripTags(s) { return s.replace(/<[^>]*>/g, '').trim(); }\nconst cleanReply = stripTags(replyText).replace(/^CHANGE:\\s*/i, '').trim();\n\n// Extract Ticket ID from parent HTML\nlet ticketId = null;\nconst idMatch = parentHtml.match(/<li><strong>Ticket ID<\\/strong>:\\s*([^<]+)<\\/li>/i);\nif (idMatch) ticketId = idMatch[1].trim();\n\n// Extract original draft inside first <pre>...</pre>\nlet originalDraft = '';\nconst preMatch = parentHtml.match(/<pre[^>]*>([\\s\\S]*?)<\\/pre>/i);\nif (preMatch) {\n  originalDraft = preMatch[1].replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&').trim();\n}\n\n// Extract first Approve link (resumeUrl)\nlet approveLink = null;\nconst linkMatch = parentHtml.match(/<a[^>]+href=\\\"([^\\\"]*resume[^\\\"]*)\\\"[^>]*>[^<]*Approve[^<]*<\\/a>/i) || parentHtml.match(/<a[^>]+href=\\\"([^\\\"]*resumeUrl[^\\\"]*)\\\"/i);\nif (linkMatch) approveLink = linkMatch[1];\n\nreturn { ticketId, originalDraft, changeRequest: cleanReply, parentHtml, approveLink, parentMessageId: $json.replyToId, teamId: $json.teamId, channelId: $json.channelId };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-224, 1040],
      "id": "6952854a-fbb3-4e8d-a9c1-73a8e2261792",
      "name": "Parse context"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an IT support assistant at Team IT. Rewrite the following email draft by applying the reviewer's requested changes. Maintain the original language, tone, and brevity while improving clarity.\n\n---\nOriginal Draft:\n{{ $json.originalDraft }}\n\nChange Request:\n{{ $json.changeRequest }}\n\nReturn only the revised email body, no preface or commentary.",
        "messages": {
          "messageValues": [
            {
              "message": "You are an IT support assistant. Apply the requested changes faithfully while preserving language and professional tone."
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [0, 1040],
      "id": "71c477f5-67fe-4a8d-8ead-64486787db72",
      "name": "Rewrite with changes"
    },
    {
      "parameters": {
        "resource": "channelMessage",
        "teamId": {
          "__rl": true,
          "value": "19231660-890a-4d8c-aa37-eec9155a7382",
          "mode": "list",
          "cachedResultName": "tlv-n8n-team"
        },
        "channelId": {
          "__rl": true,
          "value": "19:QkBEBfBTzgie0IpxWzP6TlQu71o5V7xNOshVTwxLjss1@thread.tacv2",
          "mode": "list",
          "cachedResultName": "ai-confirmations",
          "cachedResultUrl": "https://teams.cloud.microsoft/l/channel/19%3AQkBEBfBTzgie0IpxWzP6TlQu71o5V7xNOshVTwxLjss1%40thread.tacv2/tlv-n8n-team?groupId=19231660-890a-4d8c-aa37-eec9155a7382&tenantId=f50f53d7-0e4f-4626-a1a9-9fe190a9fe64&allowXTenantAccess=True&ngc=True"
        },
        "contentType": "html",
        "message": "=<div style=\"margin:0;padding:0;font-family:'Segoe UI', Arial, sans-serif;\">\n\t<div style=\"max-width:760px;margin:0 auto;\">\n\t\t<p style=\"margin:0 0 12px 0;font-weight:600;font-size:16px;\">Updated Draft Ready</p>\n\n\t\t<hr style=\"margin:8px 0 12px 0;\">\n\n<p style=\"margin:12px 0 6px 0;font-weight:600;\">Full draft (to be posted to TANSS as a public reply)</p>\n\t\t<pre style=\"margin:0 0 12px 0;white-space:pre-wrap;max-height:380px;overflow:auto;\">\n{{$json.text.trim()}}\n\t\t</pre>\n\n\t\t<p style=\"margin-top:12px;\">\n\t\t\t<a href=\"{{ $('Parse context').item.json.approveLink }}\">Approve Updated Draft</a>\n\t\t</p>\n\t</div>\n</div>",
        "options": {}
      },
      "type": "n8n-nodes-base.microsoftTeams",
      "typeVersion": 2,
      "position": [352, 1040],
      "id": "455c8026-53bc-4674-a02b-fbe8bc51b2f9",
      "name": "Reply with updated draft",
      "webhookId": "1ced7218-53e6-47e7-ae71-5bb4be8278c5",
      "credentials": {
        "microsoftTeamsOAuth2Api": {
          "id": "JfBX4Cn1M8SQBnFV",
          "name": "Microsoft Teams account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "05a98990-47dd-4e03-a9de-453a887f0dc0",
              "name": "replyText",
              "value": "={{ $json.body.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-640, 960],
      "id": "8d0b3d17-88cc-4f37-a999-76fc44ee9ae5",
      "name": "save reply text"
    },
    {
      "parameters": {
        "model": "mistral-small-latest",
        "options": {
          "maxRetries": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "typeVersion": 1,
      "position": [0, 1264],
      "id": "8daaddc5-725f-4c09-8fee-ac89160d5363",
      "name": "mistral-small-latest",
      "credentials": {
        "mistralCloudApi": {
          "id": "OKqIIU4OvY7yKbuT",
          "name": "Mistral Cloud account"
        }
      }
    }
  ],
  "connections": {
    "On Teams message": {
      "main": [
        [
          {
            "node": "Is CHANGE reply?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is CHANGE reply?": {
      "main": [
        [
          {
            "node": "Extract reply context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract reply context": {
      "main": [
        [
          {
            "node": "Get parent message",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get reply message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get parent message": {
      "main": [
        [
          {
            "node": "Merge reply + parent",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get reply message": {
      "main": [
        [
          {
            "node": "Has CHANGE prefix?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has CHANGE prefix?": {
      "main": [
        [
          {
            "node": "save reply text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge reply + parent": {
      "main": [
        [
          {
            "node": "Parse context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse context": {
      "main": [
        [
          {
            "node": "Rewrite with changes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite with changes": {
      "main": [
        [
          {
            "node": "Reply with updated draft",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "save reply text": {
      "main": [
        [
          {
            "node": "Merge reply + parent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mistral-small-latest": {
      "ai_languageModel": [
        [
          {
            "node": "Rewrite with changes",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "cb82cb908cab52e40008ef27de71c2aa4d5b63789fd0294ce950d5a085fdc1d1"
  }
}
